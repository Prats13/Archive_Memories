{"version":3,"sources":["shared/components/FormElements/Button.js","shared/components/UIElements/Card.js","shared/components/UIElements/ErrorModal.js","shared/hooks/http-hook.js","shared/components/UIElements/Modal.js","shared/components/UIElements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js"],"names":["Button","props","href","className","size","inverse","danger","children","to","exact","type","onClick","disabled","Card","style","ErrorModal","onCancel","onClear","header","show","error","footer","useHttpClient","useState","isLoading","setIsLoading","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","ModalOverlay","content","headerClass","onSubmit","event","preventDefault","contentClass","footerClass","ReactDOM","createPortal","document","getElementById","Modal","Fragment","in","mountOnEnter","unmountOnExit","timeout","classNames","Map","mapRef","center","zoom","map","L","setView","tileLayer","attribution","addTo","marker","remove","ref","PlaceItem","auth","useContext","AuthContext","showMap","setShowMap","showConfirmModal","setShowConfirmModal","closeMapHandler","cancelDeleteHandler","confirmDeleteHandler","process","id","Authorization","token","onDelete","address","coordinates","LoadingSpinner","asOverlay","src","image","alt","title","description","userId","creatorId","PlaceList","items","length","place","key","creator","location","onDeletePlace","i","UserPlaces","loadedPlaces","setLoadedPlaces","useParams","places","fetchPlaces","deletedPlaceId","prevPlaces"],"mappings":"qGAAA,iCA0CeA,IArCA,SAAAC,GACb,OAAIA,EAAMC,KAEN,uBACEC,UAAS,yBAAoBF,EAAMG,MAAQ,UAAS,YAAIH,EAAMI,SAC5D,kBAAiB,YAAIJ,EAAMK,QAAU,kBACvCJ,KAAMD,EAAMC,MAEXD,EAAMM,UAITN,EAAMO,GAEN,kBAAC,IAAI,CACHA,GAAIP,EAAMO,GACVC,MAAOR,EAAMQ,MACbN,UAAS,yBAAoBF,EAAMG,MAAQ,UAAS,YAAIH,EAAMI,SAC5D,kBAAiB,YAAIJ,EAAMK,QAAU,mBAEtCL,EAAMM,UAKX,4BACEJ,UAAS,yBAAoBF,EAAMG,MAAQ,UAAS,YAAIH,EAAMI,SAC5D,kBAAiB,YAAIJ,EAAMK,QAAU,kBACvCI,KAAMT,EAAMS,KACZC,QAASV,EAAMU,QACfC,SAAUX,EAAMW,UAEfX,EAAMM,Y,gCCrCb,0BAYeM,IARF,SAAAZ,GACX,OACE,yBAAKE,UAAS,eAAUF,EAAME,WAAaW,MAAOb,EAAMa,OACrDb,EAAMM,Y,gCCPb,oCAkBeQ,IAbI,SAAAd,GACjB,OACE,kBAAC,IAAK,CACJe,SAAUf,EAAMgB,QAChBC,OAAO,qBACPC,OAAQlB,EAAMmB,MACdC,OAAQ,kBAAC,IAAM,CAACV,QAASV,EAAMgB,SAAS,SAExC,2BAAIhB,EAAMmB,U,yGCZhB,06MACO,IAAME,EAAgB,WAC3B,MAAkCC,oBAAS,GAAM,mBAA1CC,EAAS,KAAEC,EAAY,KAC9B,EAA0BF,qBAAU,mBAA7BH,EAAK,KAAEM,EAAQ,KAEhBC,EAAqBC,iBAAO,IAE5BC,EAAcC,sBAAW,uCAC7B,WAAOC,GAAG,6FAGuC,OAHrCC,EAAM,+BAAG,MAAOC,EAAI,+BAAG,KAAMC,EAAO,+BAAG,GACjDT,GAAa,GACPU,EAAgB,IAAIC,gBAC1BT,EAAmBU,QAAQC,KAAKH,GAAe,kBAGtBI,MAAMR,EAAK,CAChCC,SACAC,OACAC,UACAM,OAAQL,EAAcK,SACrB,KAAD,EALY,OAARC,EAAQ,iBAOaA,EAASC,OAAO,KAAD,GAIxC,GAJIC,EAAY,OAElBhB,EAAmBU,QAAUV,EAAmBU,QAAQO,QACtD,SAACC,GAAO,OAAKA,IAAYV,KAGtBM,EAASK,GAAG,CAAD,sBACR,IAAIC,MAAMJ,EAAaK,SAAS,KAAD,GAGnB,OAApBvB,GAAa,GAAO,kBACbkB,GAAY,QAGC,MAHD,0BAEnBjB,EAAS,KAAIsB,SACbvB,GAAa,GAAO,+DAGvB,mDA/B4B,GAgC7B,IAaF,OANAwB,qBAAU,WACR,OAAO,WACLtB,EAAmBU,QAAQa,SAAQ,SAACC,GAAS,OAAKA,EAAUC,cAE7D,IAEI,CAAE5B,YAAWJ,QAAOS,cAAYwB,WAVpB,WACjB3B,EAAS,U,gCC5Cb,oDAOM4B,GAPN,MAOqB,SAAArD,GACnB,IAAMsD,EACJ,yBAAKpD,UAAS,gBAAWF,EAAME,WAAaW,MAAOb,EAAMa,OACvD,4BAAQX,UAAS,wBAAmBF,EAAMuD,cACxC,4BAAKvD,EAAMiB,SAEb,0BACEuC,SACExD,EAAMwD,SAAWxD,EAAMwD,SAAW,SAAAC,GAAK,OAAIA,EAAMC,mBAGnD,yBAAKxD,UAAS,yBAAoBF,EAAM2D,eACrC3D,EAAMM,UAET,4BAAQJ,UAAS,wBAAmBF,EAAM4D,cACvC5D,EAAMoB,UAKf,OAAOyC,IAASC,aAAaR,EAASS,SAASC,eAAe,iBAoBjDC,IAjBD,SAAAjE,GACZ,OACE,kBAAC,IAAMkE,SAAQ,KACZlE,EAAMkB,MAAQ,kBAAC,IAAQ,CAACR,QAASV,EAAMe,WACxC,kBAAC,IAAa,CACZoD,GAAInE,EAAMkB,KACVkD,cAAY,EACZC,eAAa,EACbC,QAAS,IACTC,WAAW,SAEX,kBAAClB,EAAiBrD,O,wPCdXwE,G,YArBH,SAAAxE,GACV,IAAMyE,EAAS9C,mBACP+C,EAAiB1E,EAAjB0E,OAAQC,EAAS3E,EAAT2E,KAchB,OAZA3B,qBAAU,WACR,IAAM4B,EAAMC,IAAED,IAAIH,EAAOrC,SAAS0C,QAAQJ,EAAQC,GAMlD,OALAE,IAAEE,UAAU,qDAAsD,CAChEC,YAAa,6CACZC,MAAML,GACTC,IAAEK,OAAOR,GAAQO,MAAML,GAEhB,WACLA,EAAIO,YAEL,CAACT,EAAQC,IAGV,yBAAKS,IAAKX,EAAQvE,UAAS,cAASF,EAAME,WAAaW,MAAOb,EAAMa,U,mDCtBxE,06MAWA,IAuGewE,EAvGG,SAAArF,GAChB,MAAsDqB,cAA9CE,EAAS,EAATA,UAAWJ,EAAK,EAALA,MAAOS,EAAW,EAAXA,YAAawB,EAAU,EAAVA,WACjCkC,EAAOC,qBAAWC,KACxB,EAA8BlE,oBAAS,GAAM,mBAAtCmE,EAAO,KAAEC,EAAU,KAC1B,EAAgDpE,oBAAS,GAAM,mBAAxDqE,EAAgB,KAAEC,EAAmB,KAItCC,EAAkB,WAAH,OAASH,GAAW,IAMnCI,EAAsB,WAC1BF,GAAoB,IAGhBG,EAAoB,uCAAG,8EACA,OAA3BH,GAAoB,GAAO,kBAEnBhE,EACJoE,4BAAkC,WAAD,OAAYhG,EAAMiG,IACnD,SACA,KACA,CACEC,cAAe,UAAYZ,EAAKa,QAElC,KAAD,EACDnG,EAAMoG,SAASpG,EAAMiG,IAAI,uGAE5B,kBAbyB,mCAe1B,OACE,kBAAC,IAAM/B,SAAQ,KACb,kBAACpD,EAAA,EAAU,CAACK,MAAOA,EAAOH,QAASoC,IACnC,kBAACa,EAAA,EAAK,CACJ/C,KAAMuE,EACN1E,SAAU8E,EACV5E,OAAQjB,EAAMqG,QACd1C,aAAa,4BACbC,YAAY,4BACZxC,OAAQ,kBAACrB,EAAA,EAAM,CAACW,QAASmF,GAAiB,UAE1C,yBAAK3F,UAAU,iBACb,kBAAC,EAAG,CAACwE,OAAQ1E,EAAMsG,YAAa3B,KAAM,OAG1C,kBAACV,EAAA,EAAK,CACJ/C,KAAMyE,EACN5E,SAAU+E,EACV7E,OAAO,gBACP2C,YAAY,4BACZxC,OACE,kBAAC,IAAM8C,SAAQ,KACb,kBAACnE,EAAA,EAAM,CAACK,SAAO,EAACM,QAASoF,GAAqB,UAG9C,kBAAC/F,EAAA,EAAM,CAACM,QAAM,EAACK,QAASqF,GAAsB,YAMlD,2BAAG,kGAKL,wBAAI7F,UAAU,cACZ,kBAACU,EAAA,EAAI,CAACV,UAAU,uBACbqB,GAAa,kBAACgF,EAAA,EAAc,CAACC,WAAS,IACvC,yBAAKtG,UAAU,qBACb,yBACEuG,IAAG,UAAKT,wBAA+B,YAAIhG,EAAM0G,OACjDC,IAAK3G,EAAM4G,SAGf,yBAAK1G,UAAU,oBACb,4BAAKF,EAAM4G,OACX,4BAAK5G,EAAMqG,SACX,2BAAIrG,EAAM6G,cAEZ,yBAAK3G,UAAU,uBACb,kBAACH,EAAA,EAAM,CAACK,SAAO,EAACM,QA9EH,WAAH,OAASgF,GAAW,KA8EW,eAGxCJ,EAAKwB,SAAW9G,EAAM+G,WACrB,kBAAChH,EAAA,EAAM,CAACQ,GAAE,kBAAaP,EAAMiG,KAAM,QAGpCX,EAAKwB,SAAW9G,EAAM+G,WACrB,kBAAChH,EAAA,EAAM,CAACM,QAAM,EAACK,QAlFM,WAC/BkF,GAAoB,KAiFwC,eClEjDoB,G,MA/BG,SAAAhH,GAChB,OAA2B,IAAvBA,EAAMiH,MAAMC,OAEZ,yBAAKhH,UAAU,qBACb,kBAACU,EAAA,EAAI,KACH,4BAAI,sCACJ,kBAACb,EAAA,EAAM,CAACQ,GAAG,eAAc,iBAO/B,wBAAIL,UAAU,cACXF,EAAMiH,MAAMrC,KAAI,SAAAuC,GAAK,OACpB,kBAAC,EAAS,CACRC,IAAKD,EAAMlB,GACXA,GAAIkB,EAAMlB,GACVS,MAAOS,EAAMT,MACbE,MAAOO,EAAMP,MACbC,YAAaM,EAAMN,YACnBR,QAASc,EAAMd,QACfU,UAAWI,EAAME,QACjBf,YAAaa,EAAMG,SACnBlB,SAAUpG,EAAMuH,sB,aC9B1B,kmGAAAC,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQA8CeC,UAvCI,WACjB,MAAwCnG,qBAAU,mBAA3CoG,EAAY,KAAEC,EAAe,KACpC,EAAsDtG,cAA9CE,EAAS,EAATA,UAAWJ,EAAK,EAALA,MAAOS,EAAW,EAAXA,YAAawB,EAAU,EAAVA,WAEjC0D,EAASc,sBAAYd,OAE3B9D,qBAAU,YACS,uCAAG,6GAEWpB,EAAY,GAAD,OACjCoE,4BAAiC,wBAAgBc,IACpD,KAAD,EAFKpE,EAAY,OAGlBiF,EAAgBjF,EAAamF,QAAQ,uGAExC,kBAPgB,mCAQjBC,KACC,CAAClG,EAAakF,IAQjB,OACE,kBAAC,IAAM5C,SAAQ,KACb,kBAACpD,EAAA,EAAU,CAACK,MAAOA,EAAOH,QAASoC,IAClC7B,GACC,yBAAKrB,UAAU,UACb,kBAACqG,EAAA,EAAc,QAGjBhF,GAAamG,GACb,kBAAC,EAAS,CAACT,MAAOS,EAAcH,cAfV,SAAAQ,GAC1BJ,GAAgB,SAAAK,GAAU,OACxBA,EAAWrF,QAAO,SAAAwE,GAAK,OAAIA,EAAMlB,KAAO8B","file":"static/js/6.4bd9832d.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import { useState, useCallback, useRef, useEffect } from \"react\";\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  const activeHttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback(\r\n    async (url, method = \"GET\", body = null, headers = {}) => {\r\n      setIsLoading(true);\r\n      const httpAbortCtrl = new AbortController();\r\n      activeHttpRequests.current.push(httpAbortCtrl);\r\n\r\n      try {\r\n        const response = await fetch(url, {\r\n          method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortCtrl.signal,\r\n        });\r\n\r\n        const responseData = await response.json();\r\n\r\n        activeHttpRequests.current = activeHttpRequests.current.filter(\r\n          (reqCtrl) => reqCtrl !== httpAbortCtrl\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(responseData.message);\r\n        }\r\n\r\n        setIsLoading(false);\r\n        return responseData;\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setIsLoading(false);\r\n        throw err;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      activeHttpRequests.current.forEach((abortCtrl) => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n\r\n  return { isLoading, error, sendRequest,clearError };\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import React, { useRef, useEffect } from 'react';\nimport L from 'leaflet';\n\nimport 'leaflet/dist/leaflet.css';\nimport './Map.css';\n\nconst Map = props => {\n  const mapRef = useRef();\n  const { center, zoom } = props;\n\n  useEffect(() => {\n    const map = L.map(mapRef.current).setView(center, zoom);\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: 'Map data © OpenStreetMap contributors',\n    }).addTo(map);\n    L.marker(center).addTo(map);\n\n    return () => {\n      map.remove();\n    };\n  }, [center, zoom]);\n\n  return (\n    <div ref={mapRef} className={`map ${props.className}`} style={props.style}></div>\n  );\n};\n\nexport default Map;\n\n","import React, { useState, useContext } from \"react\";\n\nimport Card from \"../../shared/components/UIElements/Card\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport Modal from \"../../shared/components/UIElements/Modal\";\nimport Map from \"../../shared/components/UIElements/Map\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport \"./PlaceItem.css\";\n\nconst PlaceItem = props => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const auth = useContext(AuthContext);\n  const [showMap, setShowMap] = useState(false);\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n\n  const openMapHandler = () => setShowMap(true);\n\n  const closeMapHandler = () => setShowMap(false);\n\n  const showDeleteWarningHandler = () => {\n    setShowConfirmModal(true);\n  };\n\n  const cancelDeleteHandler = () => {\n    setShowConfirmModal(false);\n  };\n\n  const confirmDeleteHandler = async () => {\n    setShowConfirmModal(false);\n    try {\n      await sendRequest(\n        process.env.REACT_APP_BACKEND_URL+`/places/${props.id}`,\n        'DELETE',\n        null,\n        {\n          Authorization: 'Bearer ' + auth.token\n        }\n      );\n      props.onDelete(props.id);\n    } catch (err) {}\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Modal\n        show={showMap}\n        onCancel={closeMapHandler}\n        header={props.address}\n        contentClass=\"place-item__modal-content\"\n        footerClass=\"place-item__modal-actions\"\n        footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\n      >\n        <div className=\"map-container\">\n          <Map center={props.coordinates} zoom={16} />\n        </div>\n      </Modal>\n      <Modal\n        show={showConfirmModal}\n        onCancel={cancelDeleteHandler}\n        header=\"Are you sure?\"\n        footerClass=\"place-item__modal-actions\"\n        footer={\n          <React.Fragment>\n            <Button inverse onClick={cancelDeleteHandler}>\n              CANCEL\n            </Button>\n            <Button danger onClick={confirmDeleteHandler}>\n              DELETE\n            </Button>\n          </React.Fragment>\n        }\n      >\n        <p>\n          Do you want to proceed and delete this place? Please note that it\n          can't be undone thereafter.\n        </p>\n      </Modal>\n      <li className=\"place-item\">\n        <Card className=\"place-item__content\">\n          {isLoading && <LoadingSpinner asOverlay />}\n          <div className=\"place-item__image\">\n            <img\n              src={`${process.env.REACT_APP_ASSET_URL}/${props.image}`}\n              alt={props.title}\n            />\n          </div>\n          <div className=\"place-item__info\">\n            <h2>{props.title}</h2>\n            <h3>{props.address}</h3>\n            <p>{props.description}</p>\n          </div>\n          <div className=\"place-item__actions\">\n            <Button inverse onClick={openMapHandler}>\n              VIEW ON MAP\n            </Button>\n            {auth.userId === props.creatorId && (\n              <Button to={`/places/${props.id}`}>EDIT</Button>\n            )}\n\n            {auth.userId === props.creatorId && (\n              <Button danger onClick={showDeleteWarningHandler}>\n                DELETE\n              </Button>\n            )}\n          </div>\n        </Card>\n      </li>\n    </React.Fragment>\n  );\n};\n\nexport default PlaceItem;\n","import React from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport Button from '../../shared/components/FormElements/Button';\nimport PlaceItem from './PlaceItem';\nimport './PlaceList.css';\n\nconst PlaceList = props => {\n  if (props.items.length === 0) {\n    return (\n      <div className=\"place-list center\">\n        <Card>\n          <h2>No places found. Maybe create one?</h2>\n          <Button to='/places/new'>Share Place</Button>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <ul className=\"place-list\">\n      {props.items.map(place => (\n        <PlaceItem\n          key={place.id}\n          id={place.id}\n          image={place.image}\n          title={place.title}\n          description={place.description}\n          address={place.address}\n          creatorId={place.creator}\n          coordinates={place.location}\n          onDelete={props.onDeletePlace}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default PlaceList;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport PlaceList from \"../components/PlaceList\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\n\nconst UserPlaces = () => {\n  const [loadedPlaces, setLoadedPlaces] = useState();\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const userId = useParams().userId;\n\n  useEffect(() => {\n    const fetchPlaces = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/places/user/${userId}`\n        );\n        setLoadedPlaces(responseData.places);\n      } catch (err) {}\n    };\n    fetchPlaces();\n  }, [sendRequest, userId]);\n\n  const placeDeletedHandler = deletedPlaceId => {\n    setLoadedPlaces(prevPlaces =>\n      prevPlaces.filter(place => place.id !== deletedPlaceId)\n    );\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>\n      )}\n      {!isLoading && loadedPlaces && (\n        <PlaceList items={loadedPlaces} onDeletePlace={placeDeletedHandler} />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default UserPlaces;\n"],"sourceRoot":""}